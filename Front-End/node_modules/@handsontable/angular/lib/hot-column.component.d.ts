import { OnInit, OnChanges, OnDestroy } from '@angular/core';
import { HotTableComponent } from './hot-table.component';
import Handsontable from 'handsontable';
import * as ɵngcc0 from '@angular/core';
export declare class HotColumnComponent implements OnInit, OnChanges, OnDestroy {
    private parentComponent;
    private firstRun;
    allowEmpty: Handsontable.ColumnSettings['allowEmpty'];
    allowHtml: Handsontable.ColumnSettings['allowHtml'];
    allowInvalid: Handsontable.ColumnSettings['allowInvalid'];
    checkedTemplate: Handsontable.ColumnSettings['checkedTemplate'];
    className: Handsontable.ColumnSettings['className'];
    columnSorting: Handsontable.ColumnSettings['columnSorting'];
    colWidths: Handsontable.ColumnSettings['colWidths'];
    commentedCellClassName: Handsontable.ColumnSettings['commentedCellClassName'];
    copyable: Handsontable.ColumnSettings['copyable'];
    correctFormat: Handsontable.ColumnSettings['correctFormat'];
    data: Handsontable.ColumnSettings['data'];
    dateFormat: Handsontable.ColumnSettings['dateFormat'];
    defaultDate: Handsontable.ColumnSettings['defaultDate'];
    editor: Handsontable.ColumnSettings['editor'];
    filteringCaseSensitive: Handsontable.ColumnSettings['filteringCaseSensitive'];
    invalidCellClassName: Handsontable.ColumnSettings['invalidCellClassName'];
    label: Handsontable.ColumnSettings['label'];
    language: Handsontable.ColumnSettings['language'];
    noWordWrapClassName: Handsontable.ColumnSettings['noWordWrapClassName'];
    numericFormat: Handsontable.ColumnSettings['numericFormat'];
    placeholder: Handsontable.ColumnSettings['placeholder'];
    placeholderCellClassName: Handsontable.ColumnSettings['placeholderCellClassName'];
    readOnly: Handsontable.ColumnSettings['readOnly'];
    readOnlyCellClassName: Handsontable.ColumnSettings['readOnlyCellClassName'];
    renderer: Handsontable.ColumnSettings['renderer'];
    selectOptions: Handsontable.ColumnSettings['selectOptions'];
    skipColumnOnPaste: Handsontable.ColumnSettings['skipColumnOnPaste'];
    sortByRelevance: Handsontable.ColumnSettings['sortByRelevance'];
    source: Handsontable.ColumnSettings['source'];
    strict: Handsontable.ColumnSettings['strict'];
    title: Handsontable.ColumnSettings['title'];
    trimDropdown: Handsontable.ColumnSettings['trimDropdown'];
    type: Handsontable.ColumnSettings['type'];
    uncheckedTemplate: Handsontable.ColumnSettings['uncheckedTemplate'];
    validator: Handsontable.ColumnSettings['validator'];
    visibleRows: Handsontable.ColumnSettings['visibleRows'];
    width: Handsontable.ColumnSettings['width'];
    wordWrap: Handsontable.ColumnSettings['wordWrap'];
    constructor(parentComponent: HotTableComponent);
    ngOnInit(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HotColumnComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HotColumnComponent, "hot-column", never, { "allowEmpty": "allowEmpty"; "allowHtml": "allowHtml"; "allowInvalid": "allowInvalid"; "checkedTemplate": "checkedTemplate"; "className": "className"; "columnSorting": "columnSorting"; "colWidths": "colWidths"; "commentedCellClassName": "commentedCellClassName"; "copyable": "copyable"; "correctFormat": "correctFormat"; "data": "data"; "dateFormat": "dateFormat"; "defaultDate": "defaultDate"; "editor": "editor"; "filteringCaseSensitive": "filteringCaseSensitive"; "invalidCellClassName": "invalidCellClassName"; "label": "label"; "language": "language"; "noWordWrapClassName": "noWordWrapClassName"; "numericFormat": "numericFormat"; "placeholder": "placeholder"; "placeholderCellClassName": "placeholderCellClassName"; "readOnly": "readOnly"; "readOnlyCellClassName": "readOnlyCellClassName"; "renderer": "renderer"; "selectOptions": "selectOptions"; "skipColumnOnPaste": "skipColumnOnPaste"; "sortByRelevance": "sortByRelevance"; "source": "source"; "strict": "strict"; "title": "title"; "trimDropdown": "trimDropdown"; "type": "type"; "uncheckedTemplate": "uncheckedTemplate"; "validator": "validator"; "visibleRows": "visibleRows"; "width": "width"; "wordWrap": "wordWrap"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG90LWNvbHVtbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiaG90LWNvbHVtbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEhvdFRhYmxlQ29tcG9uZW50IH0gZnJvbSAnLi9ob3QtdGFibGUuY29tcG9uZW50JztcbmltcG9ydCBIYW5kc29udGFibGUgZnJvbSAnaGFuZHNvbnRhYmxlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEhvdENvbHVtbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgcGFyZW50Q29tcG9uZW50O1xuICAgIHByaXZhdGUgZmlyc3RSdW47XG4gICAgYWxsb3dFbXB0eTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydhbGxvd0VtcHR5J107XG4gICAgYWxsb3dIdG1sOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2FsbG93SHRtbCddO1xuICAgIGFsbG93SW52YWxpZDogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydhbGxvd0ludmFsaWQnXTtcbiAgICBjaGVja2VkVGVtcGxhdGU6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snY2hlY2tlZFRlbXBsYXRlJ107XG4gICAgY2xhc3NOYW1lOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2NsYXNzTmFtZSddO1xuICAgIGNvbHVtblNvcnRpbmc6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snY29sdW1uU29ydGluZyddO1xuICAgIGNvbFdpZHRoczogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydjb2xXaWR0aHMnXTtcbiAgICBjb21tZW50ZWRDZWxsQ2xhc3NOYW1lOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2NvbW1lbnRlZENlbGxDbGFzc05hbWUnXTtcbiAgICBjb3B5YWJsZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydjb3B5YWJsZSddO1xuICAgIGNvcnJlY3RGb3JtYXQ6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snY29ycmVjdEZvcm1hdCddO1xuICAgIGRhdGE6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snZGF0YSddO1xuICAgIGRhdGVGb3JtYXQ6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snZGF0ZUZvcm1hdCddO1xuICAgIGRlZmF1bHREYXRlOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2RlZmF1bHREYXRlJ107XG4gICAgZWRpdG9yOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2VkaXRvciddO1xuICAgIGZpbHRlcmluZ0Nhc2VTZW5zaXRpdmU6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snZmlsdGVyaW5nQ2FzZVNlbnNpdGl2ZSddO1xuICAgIGludmFsaWRDZWxsQ2xhc3NOYW1lOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ2ludmFsaWRDZWxsQ2xhc3NOYW1lJ107XG4gICAgbGFiZWw6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snbGFiZWwnXTtcbiAgICBsYW5ndWFnZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydsYW5ndWFnZSddO1xuICAgIG5vV29yZFdyYXBDbGFzc05hbWU6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snbm9Xb3JkV3JhcENsYXNzTmFtZSddO1xuICAgIG51bWVyaWNGb3JtYXQ6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snbnVtZXJpY0Zvcm1hdCddO1xuICAgIHBsYWNlaG9sZGVyOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3BsYWNlaG9sZGVyJ107XG4gICAgcGxhY2Vob2xkZXJDZWxsQ2xhc3NOYW1lOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3BsYWNlaG9sZGVyQ2VsbENsYXNzTmFtZSddO1xuICAgIHJlYWRPbmx5OiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3JlYWRPbmx5J107XG4gICAgcmVhZE9ubHlDZWxsQ2xhc3NOYW1lOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3JlYWRPbmx5Q2VsbENsYXNzTmFtZSddO1xuICAgIHJlbmRlcmVyOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3JlbmRlcmVyJ107XG4gICAgc2VsZWN0T3B0aW9uczogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydzZWxlY3RPcHRpb25zJ107XG4gICAgc2tpcENvbHVtbk9uUGFzdGU6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snc2tpcENvbHVtbk9uUGFzdGUnXTtcbiAgICBzb3J0QnlSZWxldmFuY2U6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snc29ydEJ5UmVsZXZhbmNlJ107XG4gICAgc291cmNlOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3NvdXJjZSddO1xuICAgIHN0cmljdDogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWydzdHJpY3QnXTtcbiAgICB0aXRsZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWyd0aXRsZSddO1xuICAgIHRyaW1Ecm9wZG93bjogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWyd0cmltRHJvcGRvd24nXTtcbiAgICB0eXBlOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3R5cGUnXTtcbiAgICB1bmNoZWNrZWRUZW1wbGF0ZTogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWyd1bmNoZWNrZWRUZW1wbGF0ZSddO1xuICAgIHZhbGlkYXRvcjogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWyd2YWxpZGF0b3InXTtcbiAgICB2aXNpYmxlUm93czogSGFuZHNvbnRhYmxlLkNvbHVtblNldHRpbmdzWyd2aXNpYmxlUm93cyddO1xuICAgIHdpZHRoOiBIYW5kc29udGFibGUuQ29sdW1uU2V0dGluZ3NbJ3dpZHRoJ107XG4gICAgd29yZFdyYXA6IEhhbmRzb250YWJsZS5Db2x1bW5TZXR0aW5nc1snd29yZFdyYXAnXTtcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnRDb21wb25lbnQ6IEhvdFRhYmxlQ29tcG9uZW50KTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==