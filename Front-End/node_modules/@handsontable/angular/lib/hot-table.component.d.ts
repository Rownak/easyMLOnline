import { AfterViewInit, NgZone, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import Handsontable from 'handsontable';
import { HotTableRegisterer } from './hot-table-registerer.service';
import { HotSettingsResolver } from './hot-settings-resolver.service';
import { HotColumnComponent } from './hot-column.component';
import * as Éµngcc0 from '@angular/core';
export declare class HotTableComponent implements AfterViewInit, OnChanges, OnDestroy {
    private _ngZone;
    private _hotTableRegisterer;
    private _hotSettingsResolver;
    container: any;
    private hotInstance;
    private columnsComponents;
    settings: Handsontable.GridSettings;
    hotId: string;
    activeHeaderClassName: Handsontable.GridSettings['activeHeaderClassName'];
    allowEmpty: Handsontable.GridSettings['allowEmpty'];
    allowHtml: Handsontable.GridSettings['allowHtml'];
    allowInsertColumn: Handsontable.GridSettings['allowInsertColumn'];
    allowInsertRow: Handsontable.GridSettings['allowInsertRow'];
    allowInvalid: Handsontable.GridSettings['allowInvalid'];
    allowRemoveColumn: Handsontable.GridSettings['allowRemoveColumn'];
    allowRemoveRow: Handsontable.GridSettings['allowRemoveRow'];
    autoColumnSize: Handsontable.GridSettings['autoColumnSize'];
    autoRowSize: Handsontable.GridSettings['autoRowSize'];
    autoWrapCol: Handsontable.GridSettings['autoWrapCol'];
    autoWrapRow: Handsontable.GridSettings['autoWrapRow'];
    bindRowsWithHeaders: Handsontable.GridSettings['bindRowsWithHeaders'];
    cell: Handsontable.GridSettings['cell'];
    cells: Handsontable.GridSettings['cells'];
    checkedTemplate: Handsontable.GridSettings['checkedTemplate'];
    className: Handsontable.GridSettings['className'];
    colHeaders: Handsontable.GridSettings['colHeaders'];
    collapsibleColumns: Handsontable.GridSettings['collapsibleColumns'];
    columnHeaderHeight: Handsontable.GridSettings['columnHeaderHeight'];
    columns: Handsontable.GridSettings['columns'];
    columnSorting: Handsontable.GridSettings['columnSorting'];
    columnSummary: Handsontable.GridSettings['columnSummary'];
    colWidths: Handsontable.GridSettings['colWidths'];
    commentedCellClassName: Handsontable.GridSettings['commentedCellClassName'];
    comments: Handsontable.GridSettings['comments'];
    contextMenu: Handsontable.GridSettings['contextMenu'];
    copyable: Handsontable.GridSettings['copyable'];
    copyPaste: Handsontable.GridSettings['copyPaste'];
    correctFormat: Handsontable.GridSettings['correctFormat'];
    currentColClassName: Handsontable.GridSettings['currentColClassName'];
    currentHeaderClassName: Handsontable.GridSettings['currentHeaderClassName'];
    currentRowClassName: Handsontable.GridSettings['currentRowClassName'];
    customBorders: Handsontable.GridSettings['customBorders'];
    data: Handsontable.GridSettings['data'];
    dataSchema: Handsontable.GridSettings['dataSchema'];
    dateFormat: Handsontable.GridSettings['dateFormat'];
    defaultDate: Handsontable.GridSettings['defaultDate'];
    disableVisualSelection: Handsontable.GridSettings['disableVisualSelection'];
    dragToScroll: Handsontable.GridSettings['dragToScroll'];
    dropdownMenu: Handsontable.GridSettings['dropdownMenu'];
    editor: Handsontable.GridSettings['editor'];
    enterBeginsEditing: Handsontable.GridSettings['enterBeginsEditing'];
    enterMoves: Handsontable.GridSettings['enterMoves'];
    fillHandle: Handsontable.GridSettings['fillHandle'];
    filter: Handsontable.GridSettings['filter'];
    filteringCaseSensitive: Handsontable.GridSettings['filteringCaseSensitive'];
    filters: Handsontable.GridSettings['filters'];
    fixedColumnsLeft: Handsontable.GridSettings['fixedColumnsLeft'];
    fixedRowsBottom: Handsontable.GridSettings['fixedRowsBottom'];
    fixedRowsTop: Handsontable.GridSettings['fixedRowsTop'];
    formulas: Handsontable.GridSettings['formulas'];
    fragmentSelection: Handsontable.GridSettings['fragmentSelection'];
    headerTooltips: Handsontable.GridSettings['headerTooltips'];
    height: Handsontable.GridSettings['height'];
    hiddenColumns: Handsontable.GridSettings['hiddenColumns'];
    hiddenRows: Handsontable.GridSettings['hiddenRows'];
    invalidCellClassName: Handsontable.GridSettings['invalidCellClassName'];
    label: Handsontable.GridSettings['label'];
    language: Handsontable.GridSettings['language'];
    licenseKey: Handsontable.GridSettings['licenseKey'];
    manualColumnFreeze: Handsontable.GridSettings['manualColumnFreeze'];
    manualColumnMove: Handsontable.GridSettings['manualColumnMove'];
    manualColumnResize: Handsontable.GridSettings['manualColumnResize'];
    manualRowMove: Handsontable.GridSettings['manualRowMove'];
    manualRowResize: Handsontable.GridSettings['manualRowResize'];
    maxCols: Handsontable.GridSettings['maxCols'];
    maxRows: Handsontable.GridSettings['maxRows'];
    mergeCells: Handsontable.GridSettings['mergeCells'];
    minCols: Handsontable.GridSettings['minCols'];
    minRows: Handsontable.GridSettings['minRows'];
    minSpareCols: Handsontable.GridSettings['minSpareCols'];
    minSpareRows: Handsontable.GridSettings['minSpareRows'];
    multiColumnSorting: Handsontable.GridSettings['multiColumnSorting'];
    nestedHeaders: Handsontable.GridSettings['nestedHeaders'];
    nestedRows: Handsontable.GridSettings['nestedRows'];
    noWordWrapClassName: Handsontable.GridSettings['noWordWrapClassName'];
    numericFormat: Handsontable.GridSettings['numericFormat'];
    observeChanges: Handsontable.GridSettings['observeChanges'];
    observeDOMVisibility: Handsontable.GridSettings['observeDOMVisibility'];
    outsideClickDeselects: Handsontable.GridSettings['outsideClickDeselects'];
    persistentState: Handsontable.GridSettings['persistentState'];
    placeholder: Handsontable.GridSettings['placeholder'];
    placeholderCellClassName: Handsontable.GridSettings['placeholderCellClassName'];
    preventOverflow: Handsontable.GridSettings['preventOverflow'];
    preventWheel: Handsontable.GridSettings['preventWheel'];
    readOnly: Handsontable.GridSettings['readOnly'];
    readOnlyCellClassName: Handsontable.GridSettings['readOnlyCellClassName'];
    renderAllRows: Handsontable.GridSettings['renderAllRows'];
    renderer: Handsontable.GridSettings['renderer'];
    rowHeaders: Handsontable.GridSettings['rowHeaders'];
    rowHeaderWidth: Handsontable.GridSettings['rowHeaderWidth'];
    rowHeights: Handsontable.GridSettings['rowHeights'];
    search: Handsontable.GridSettings['search'];
    selectionMode: Handsontable.GridSettings['selectionMode'];
    selectOptions: Handsontable.GridSettings['selectOptions'];
    skipColumnOnPaste: Handsontable.GridSettings['skipColumnOnPaste'];
    skipRowOnPaste: any;
    sortByRelevance: Handsontable.GridSettings['sortByRelevance'];
    source: Handsontable.GridSettings['source'];
    startCols: Handsontable.GridSettings['startCols'];
    startRows: Handsontable.GridSettings['startRows'];
    stretchH: Handsontable.GridSettings['stretchH'];
    strict: Handsontable.GridSettings['strict'];
    tableClassName: Handsontable.GridSettings['tableClassName'];
    tabMoves: Handsontable.GridSettings['tabMoves'];
    title: Handsontable.GridSettings['title'];
    trimDropdown: Handsontable.GridSettings['trimDropdown'];
    trimRows: Handsontable.GridSettings['nestedRows'];
    trimWhitespace: Handsontable.GridSettings['trimWhitespace'];
    type: Handsontable.GridSettings['type'];
    uncheckedTemplate: Handsontable.GridSettings['uncheckedTemplate'];
    undo: Handsontable.GridSettings['undo'];
    validator: Handsontable.GridSettings['validator'];
    viewportColumnRenderingOffset: Handsontable.GridSettings['viewportColumnRenderingOffset'];
    viewportRowRenderingOffset: Handsontable.GridSettings['viewportRowRenderingOffset'];
    visibleRows: Handsontable.GridSettings['visibleRows'];
    width: Handsontable.GridSettings['width'];
    wordWrap: Handsontable.GridSettings['wordWrap'];
    afterAddChild: Handsontable.GridSettings['afterAddChild'];
    afterAutofill: Handsontable.GridSettings['afterAutofill'];
    afterBeginEditing: Handsontable.GridSettings['afterBeginEditing'];
    afterCellMetaReset: Handsontable.GridSettings['afterCellMetaReset'];
    afterChange: Handsontable.GridSettings['afterChange'];
    afterChangesObserved: Handsontable.GridSettings['afterChangesObserved'];
    afterColumnCollapse: Handsontable.GridSettings['afterColumnCollapse'];
    afterColumnExpand: Handsontable.GridSettings['afterColumnExpand'];
    afterColumnMove: Handsontable.GridSettings['afterColumnMove'];
    afterColumnResize: Handsontable.GridSettings['afterColumnResize'];
    afterColumnSort: Handsontable.GridSettings['afterColumnSort'];
    afterContextMenuDefaultOptions: Handsontable.GridSettings['afterContextMenuDefaultOptions'];
    afterContextMenuHide: Handsontable.GridSettings['afterContextMenuHide'];
    afterContextMenuShow: Handsontable.GridSettings['afterContextMenuShow'];
    afterCopy: Handsontable.GridSettings['afterCopy'];
    afterCopyLimit: Handsontable.GridSettings['afterCopyLimit'];
    afterCreateCol: Handsontable.GridSettings['afterCreateCol'];
    afterCreateRow: Handsontable.GridSettings['afterCreateRow'];
    afterCut: Handsontable.GridSettings['afterCut'];
    afterDeselect: Handsontable.GridSettings['afterDeselect'];
    afterDestroy: Handsontable.GridSettings['afterDestroy'];
    afterDetachChild: Handsontable.GridSettings['afterDetachChild'];
    afterDocumentKeyDown: Handsontable.GridSettings['afterDocumentKeyDown'];
    afterDrawSelection: Handsontable.GridSettings['afterDrawSelection'];
    afterDropdownMenuDefaultOptions: Handsontable.GridSettings['afterDropdownMenuDefaultOptions'];
    afterDropdownMenuHide: Handsontable.GridSettings['afterDropdownMenuHide'];
    afterDropdownMenuShow: Handsontable.GridSettings['afterDropdownMenuShow'];
    afterFilter: Handsontable.GridSettings['afterFilter'];
    afterGetCellMeta: Handsontable.GridSettings['afterGetCellMeta'];
    afterGetColHeader: Handsontable.GridSettings['afterGetColHeader'];
    afterGetColumnHeaderRenderers: Handsontable.GridSettings['afterGetColumnHeaderRenderers'];
    afterGetRowHeader: Handsontable.GridSettings['afterGetRowHeader'];
    afterGetRowHeaderRenderers: Handsontable.GridSettings['afterGetRowHeaderRenderers'];
    afterHideColumns: Handsontable.GridSettings['afterHideColumns'];
    afterHideRows: Handsontable.GridSettings['afterHideRows'];
    afterInit: Handsontable.GridSettings['afterInit'];
    afterLanguageChange: Handsontable.GridSettings['afterLanguageChange'];
    afterListen: Handsontable.GridSettings['afterListen'];
    afterLoadData: Handsontable.GridSettings['afterLoadData'];
    afterMergeCells: Handsontable.GridSettings['afterMergeCells'];
    afterModifyTransformEnd: Handsontable.GridSettings['afterModifyTransformEnd'];
    afterModifyTransformStart: Handsontable.GridSettings['afterModifyTransformStart'];
    afterMomentumScroll: Handsontable.GridSettings['afterMomentumScroll'];
    afterOnCellContextMenu: Handsontable.GridSettings['afterOnCellContextMenu'];
    afterOnCellCornerDblClick: Handsontable.GridSettings['afterOnCellCornerDblClick'];
    afterOnCellCornerMouseDown: Handsontable.GridSettings['afterOnCellCornerMouseDown'];
    afterOnCellMouseDown: Handsontable.GridSettings['afterOnCellMouseDown'];
    afterOnCellMouseOut: Handsontable.GridSettings['afterOnCellMouseOut'];
    afterOnCellMouseOver: Handsontable.GridSettings['afterOnCellMouseOver'];
    afterOnCellMouseUp: Handsontable.GridSettings['afterOnCellMouseUp'];
    afterPaste: Handsontable.GridSettings['afterPaste'];
    afterPluginsInitialized: Handsontable.GridSettings['afterPluginsInitialized'];
    afterRedo: Handsontable.GridSettings['afterRedo'];
    afterRefreshDimensions: Handsontable.GridSettings['afterRefreshDimensions'];
    afterRemoveCellMeta: Handsontable.GridSettings['afterRemoveCellMeta'];
    afterRemoveCol: Handsontable.GridSettings['afterRemoveCol'];
    afterRemoveRow: Handsontable.GridSettings['afterRemoveRow'];
    afterRender: Handsontable.GridSettings['afterRender'];
    afterRenderer: Handsontable.GridSettings['afterRenderer'];
    afterRowMove: Handsontable.GridSettings['afterRowMove'];
    afterRowResize: Handsontable.GridSettings['afterRowResize'];
    afterScrollHorizontally: Handsontable.GridSettings['afterScrollHorizontally'];
    afterScrollVertically: Handsontable.GridSettings['afterScrollVertically'];
    afterSelection: Handsontable.GridSettings['afterSelection'];
    afterSelectionByProp: Handsontable.GridSettings['afterSelectionByProp'];
    afterSelectionEnd: Handsontable.GridSettings['afterSelectionEnd'];
    afterSelectionEndByProp: Handsontable.GridSettings['afterSelectionEndByProp'];
    afterSetCellMeta: Handsontable.GridSettings['afterSetCellMeta'];
    afterSetDataAtCell: Handsontable.GridSettings['afterSetDataAtCell'];
    afterSetDataAtRowProp: Handsontable.GridSettings['afterSetDataAtRowProp'];
    afterSetSourceDataAtCell: Handsontable.GridSettings['afterSetSourceDataAtCell'];
    afterTrimRow: Handsontable.GridSettings['afterTrimRow'];
    afterUndo: Handsontable.GridSettings['afterUndo'];
    afterUnhideColumns: Handsontable.GridSettings['afterUnhideColumns'];
    afterUnhideRows: Handsontable.GridSettings['afterUnhideRows'];
    afterUnlisten: Handsontable.GridSettings['afterUnlisten'];
    afterUnmergeCells: Handsontable.GridSettings['afterUnmergeCells'];
    afterUntrimRow: Handsontable.GridSettings['afterUntrimRow'];
    afterUpdateSettings: Handsontable.GridSettings['afterUpdateSettings'];
    afterValidate: Handsontable.GridSettings['afterValidate'];
    afterViewportColumnCalculatorOverride: Handsontable.GridSettings['afterViewportColumnCalculatorOverride'];
    afterViewportRowCalculatorOverride: Handsontable.GridSettings['afterViewportRowCalculatorOverride'];
    beforeAddChild: Handsontable.GridSettings['beforeAddChild'];
    beforeAutofill: Handsontable.GridSettings['beforeAutofill'];
    beforeAutofillInsidePopulate: Handsontable.GridSettings['beforeAutofillInsidePopulate'];
    beforeCellAlignment: Handsontable.GridSettings['beforeCellAlignment'];
    beforeChange: Handsontable.GridSettings['beforeChange'];
    beforeChangeRender: Handsontable.GridSettings['beforeChangeRender'];
    beforeColumnCollapse: Handsontable.GridSettings['beforeColumnCollapse'];
    beforeColumnExpand: Handsontable.GridSettings['beforeColumnExpand'];
    beforeColumnMove: Handsontable.GridSettings['beforeColumnMove'];
    beforeColumnResize: Handsontable.GridSettings['beforeColumnResize'];
    beforeColumnSort: Handsontable.GridSettings['beforeColumnSort'];
    beforeContextMenuSetItems: Handsontable.GridSettings['beforeContextMenuSetItems'];
    beforeContextMenuShow: Handsontable.GridSettings['beforeContextMenuShow'];
    beforeCopy: Handsontable.GridSettings['beforeCopy'];
    beforeCreateCol: Handsontable.GridSettings['beforeCreateCol'];
    beforeCreateRow: Handsontable.GridSettings['beforeCreateRow'];
    beforeCut: Handsontable.GridSettings['beforeCut'];
    beforeDetachChild: Handsontable.GridSettings['beforeDetachChild'];
    beforeDrawBorders: Handsontable.GridSettings['beforeDrawBorders'];
    beforeDropdownMenuSetItems: Handsontable.GridSettings['beforeDropdownMenuSetItems'];
    beforeDropdownMenuShow: Handsontable.GridSettings['beforeDropdownMenuShow'];
    beforeFilter: Handsontable.GridSettings['beforeFilter'];
    beforeGetCellMeta: Handsontable.GridSettings['beforeGetCellMeta'];
    beforeHideColumns: Handsontable.GridSettings['beforeHideColumns'];
    beforeHideRows: Handsontable.GridSettings['beforeHideRows'];
    beforeInit: Handsontable.GridSettings['beforeInit'];
    beforeInitWalkontable: Handsontable.GridSettings['beforeInitWalkontable'];
    beforeKeyDown: Handsontable.GridSettings['beforeKeyDown'];
    beforeLanguageChange: Handsontable.GridSettings['beforeLanguageChange'];
    beforeLoadData: Handsontable.GridSettings['beforeLoadData'];
    beforeMergeCells: Handsontable.GridSettings['beforeMergeCells'];
    beforeOnCellContextMenu: Handsontable.GridSettings['beforeOnCellContextMenu'];
    beforeOnCellMouseDown: Handsontable.GridSettings['beforeOnCellMouseDown'];
    beforeOnCellMouseOut: Handsontable.GridSettings['beforeOnCellMouseOut'];
    beforeOnCellMouseOver: Handsontable.GridSettings['beforeOnCellMouseOver'];
    beforeOnCellMouseUp: Handsontable.GridSettings['beforeOnCellMouseUp'];
    beforePaste: Handsontable.GridSettings['beforePaste'];
    beforeRedo: Handsontable.GridSettings['beforeRedo'];
    beforeRefreshDimensions: Handsontable.GridSettings['beforeRefreshDimensions'];
    beforeRemoveCellClassNames: Handsontable.GridSettings['beforeRemoveCellClassNames'];
    beforeRemoveCellMeta: Handsontable.GridSettings['beforeRemoveCellMeta'];
    beforeRemoveCol: Handsontable.GridSettings['beforeRemoveCol'];
    beforeRemoveRow: Handsontable.GridSettings['beforeRemoveRow'];
    beforeRender: Handsontable.GridSettings['beforeRender'];
    beforeRenderer: Handsontable.GridSettings['beforeRenderer'];
    beforeRowMove: Handsontable.GridSettings['beforeRowMove'];
    beforeRowResize: Handsontable.GridSettings['beforeRowResize'];
    beforeSetCellMeta: Handsontable.GridSettings['beforeSetCellMeta'];
    beforeSetRangeEnd: Handsontable.GridSettings['beforeSetRangeEnd'];
    beforeSetRangeStart: Handsontable.GridSettings['beforeSetRangeStart'];
    beforeSetRangeStartOnly: Handsontable.GridSettings['beforeSetRangeStartOnly'];
    beforeStretchingColumnWidth: Handsontable.GridSettings['beforeStretchingColumnWidth'];
    beforeTouchScroll: Handsontable.GridSettings['beforeTouchScroll'];
    beforeTrimRow: Handsontable.GridSettings['beforeTrimRow'];
    beforeUndo: Handsontable.GridSettings['beforeUndo'];
    beforeUnhideColumns: Handsontable.GridSettings['beforeUnhideColumns'];
    beforeUnhideRows: Handsontable.GridSettings['beforeUnhideRows'];
    beforeUnmergeCells: Handsontable.GridSettings['beforeUnmergeCells'];
    beforeUntrimRow: Handsontable.GridSettings['beforeUntrimRow'];
    beforeValidate: Handsontable.GridSettings['beforeValidate'];
    beforeValueRender: Handsontable.GridSettings['beforeValueRender'];
    construct: Handsontable.GridSettings['construct'];
    init: Handsontable.GridSettings['init'];
    modifyAutofillRange: Handsontable.GridSettings['modifyAutofillRange'];
    modifyColHeader: Handsontable.GridSettings['modifyColHeader'];
    modifyColumnHeaderHeight: Handsontable.GridSettings['modifyColumnHeaderHeight'];
    modifyColWidth: Handsontable.GridSettings['modifyColWidth'];
    modifyCopyableRange: Handsontable.GridSettings['modifyCopyableRange'];
    modifyData: Handsontable.GridSettings['modifyData'];
    modifyGetCellCoords: Handsontable.GridSettings['modifyGetCellCoords'];
    modifyRowData: Handsontable.GridSettings['modifyRowData'];
    modifyRowHeader: Handsontable.GridSettings['modifyRowHeader'];
    modifyRowHeaderWidth: Handsontable.GridSettings['modifyRowHeaderWidth'];
    modifyRowHeight: Handsontable.GridSettings['modifyRowHeight'];
    modifySourceData: Handsontable.GridSettings['modifySourceData'];
    modifyTransformEnd: Handsontable.GridSettings['modifyTransformEnd'];
    modifyTransformStart: Handsontable.GridSettings['modifyTransformStart'];
    persistentStateLoad: Handsontable.GridSettings['persistentStateLoad'];
    persistentStateReset: Handsontable.GridSettings['persistentStateReset'];
    persistentStateSave: Handsontable.GridSettings['persistentStateSave'];
    constructor(_ngZone: NgZone, _hotTableRegisterer: HotTableRegisterer, _hotSettingsResolver: HotSettingsResolver);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    updateHotTable(newSettings: Handsontable.GridSettings): void;
    onAfterColumnsChange(): void;
    onAfterColumnsNumberChange(): void;
    addColumn(column: HotColumnComponent): void;
    removeColumn(column: HotColumnComponent): void;
    static Éµfac: Éµngcc0.ÉµÉµFactoryDef<HotTableComponent, never>;
    static Éµcmp: Éµngcc0.ÉµÉµComponentDefWithMeta<HotTableComponent, "hot-table", never, { "hotId": "hotId"; "settings": "settings"; "activeHeaderClassName": "activeHeaderClassName"; "allowEmpty": "allowEmpty"; "allowHtml": "allowHtml"; "allowInsertColumn": "allowInsertColumn"; "allowInsertRow": "allowInsertRow"; "allowInvalid": "allowInvalid"; "allowRemoveColumn": "allowRemoveColumn"; "allowRemoveRow": "allowRemoveRow"; "autoColumnSize": "autoColumnSize"; "autoRowSize": "autoRowSize"; "autoWrapCol": "autoWrapCol"; "autoWrapRow": "autoWrapRow"; "bindRowsWithHeaders": "bindRowsWithHeaders"; "cell": "cell"; "cells": "cells"; "checkedTemplate": "checkedTemplate"; "className": "className"; "colHeaders": "colHeaders"; "collapsibleColumns": "collapsibleColumns"; "columnHeaderHeight": "columnHeaderHeight"; "columns": "columns"; "columnSorting": "columnSorting"; "columnSummary": "columnSummary"; "colWidths": "colWidths"; "commentedCellClassName": "commentedCellClassName"; "comments": "comments"; "contextMenu": "contextMenu"; "copyable": "copyable"; "copyPaste": "copyPaste"; "correctFormat": "correctFormat"; "currentColClassName": "currentColClassName"; "currentHeaderClassName": "currentHeaderClassName"; "currentRowClassName": "currentRowClassName"; "customBorders": "customBorders"; "data": "data"; "dataSchema": "dataSchema"; "dateFormat": "dateFormat"; "defaultDate": "defaultDate"; "disableVisualSelection": "disableVisualSelection"; "dragToScroll": "dragToScroll"; "dropdownMenu": "dropdownMenu"; "editor": "editor"; "enterBeginsEditing": "enterBeginsEditing"; "enterMoves": "enterMoves"; "fillHandle": "fillHandle"; "filter": "filter"; "filteringCaseSensitive": "filteringCaseSensitive"; "filters": "filters"; "fixedColumnsLeft": "fixedColumnsLeft"; "fixedRowsBottom": "fixedRowsBottom"; "fixedRowsTop": "fixedRowsTop"; "formulas": "formulas"; "fragmentSelection": "fragmentSelection"; "headerTooltips": "headerTooltips"; "height": "height"; "hiddenColumns": "hiddenColumns"; "hiddenRows": "hiddenRows"; "invalidCellClassName": "invalidCellClassName"; "label": "label"; "language": "language"; "licenseKey": "licenseKey"; "manualColumnFreeze": "manualColumnFreeze"; "manualColumnMove": "manualColumnMove"; "manualColumnResize": "manualColumnResize"; "manualRowMove": "manualRowMove"; "manualRowResize": "manualRowResize"; "maxCols": "maxCols"; "maxRows": "maxRows"; "mergeCells": "mergeCells"; "minCols": "minCols"; "minRows": "minRows"; "minSpareCols": "minSpareCols"; "minSpareRows": "minSpareRows"; "multiColumnSorting": "multiColumnSorting"; "nestedHeaders": "nestedHeaders"; "nestedRows": "nestedRows"; "noWordWrapClassName": "noWordWrapClassName"; "numericFormat": "numericFormat"; "observeChanges": "observeChanges"; "observeDOMVisibility": "observeDOMVisibility"; "outsideClickDeselects": "outsideClickDeselects"; "persistentState": "persistentState"; "placeholder": "placeholder"; "placeholderCellClassName": "placeholderCellClassName"; "preventOverflow": "preventOverflow"; "preventWheel": "preventWheel"; "readOnly": "readOnly"; "readOnlyCellClassName": "readOnlyCellClassName"; "renderAllRows": "renderAllRows"; "renderer": "renderer"; "rowHeaders": "rowHeaders"; "rowHeaderWidth": "rowHeaderWidth"; "rowHeights": "rowHeights"; "search": "search"; "selectionMode": "selectionMode"; "selectOptions": "selectOptions"; "skipColumnOnPaste": "skipColumnOnPaste"; "skipRowOnPaste": "skipRowOnPaste"; "sortByRelevance": "sortByRelevance"; "source": "source"; "startCols": "startCols"; "startRows": "startRows"; "stretchH": "stretchH"; "strict": "strict"; "tableClassName": "tableClassName"; "tabMoves": "tabMoves"; "title": "title"; "trimDropdown": "trimDropdown"; "trimRows": "trimRows"; "trimWhitespace": "trimWhitespace"; "type": "type"; "uncheckedTemplate": "uncheckedTemplate"; "undo": "undo"; "validator": "validator"; "viewportColumnRenderingOffset": "viewportColumnRenderingOffset"; "viewportRowRenderingOffset": "viewportRowRenderingOffset"; "visibleRows": "visibleRows"; "width": "width"; "wordWrap": "wordWrap"; "afterAddChild": "afterAddChild"; "afterAutofill": "afterAutofill"; "afterBeginEditing": "afterBeginEditing"; "afterCellMetaReset": "afterCellMetaReset"; "afterChange": "afterChange"; "afterChangesObserved": "afterChangesObserved"; "afterColumnCollapse": "afterColumnCollapse"; "afterColumnExpand": "afterColumnExpand"; "afterColumnMove": "afterColumnMove"; "afterColumnResize": "afterColumnResize"; "afterColumnSort": "afterColumnSort"; "afterContextMenuDefaultOptions": "afterContextMenuDefaultOptions"; "afterContextMenuHide": "afterContextMenuHide"; "afterContextMenuShow": "afterContextMenuShow"; "afterCopy": "afterCopy"; "afterCopyLimit": "afterCopyLimit"; "afterCreateCol": "afterCreateCol"; "afterCreateRow": "afterCreateRow"; "afterCut": "afterCut"; "afterDeselect": "afterDeselect"; "afterDestroy": "afterDestroy"; "afterDetachChild": "afterDetachChild"; "afterDocumentKeyDown": "afterDocumentKeyDown"; "afterDrawSelection": "afterDrawSelection"; "afterDropdownMenuDefaultOptions": "afterDropdownMenuDefaultOptions"; "afterDropdownMenuHide": "afterDropdownMenuHide"; "afterDropdownMenuShow": "afterDropdownMenuShow"; "afterFilter": "afterFilter"; "afterGetCellMeta": "afterGetCellMeta"; "afterGetColHeader": "afterGetColHeader"; "afterGetColumnHeaderRenderers": "afterGetColumnHeaderRenderers"; "afterGetRowHeader": "afterGetRowHeader"; "afterGetRowHeaderRenderers": "afterGetRowHeaderRenderers"; "afterHideColumns": "afterHideColumns"; "afterHideRows": "afterHideRows"; "afterInit": "afterInit"; "afterLanguageChange": "afterLanguageChange"; "afterListen": "afterListen"; "afterLoadData": "afterLoadData"; "afterMergeCells": "afterMergeCells"; "afterModifyTransformEnd": "afterModifyTransformEnd"; "afterModifyTransformStart": "afterModifyTransformStart"; "afterMomentumScroll": "afterMomentumScroll"; "afterOnCellContextMenu": "afterOnCellContextMenu"; "afterOnCellCornerDblClick": "afterOnCellCornerDblClick"; "afterOnCellCornerMouseDown": "afterOnCellCornerMouseDown"; "afterOnCellMouseDown": "afterOnCellMouseDown"; "afterOnCellMouseOut": "afterOnCellMouseOut"; "afterOnCellMouseOver": "afterOnCellMouseOver"; "afterOnCellMouseUp": "afterOnCellMouseUp"; "afterPaste": "afterPaste"; "afterPluginsInitialized": "afterPluginsInitialized"; "afterRedo": "afterRedo"; "afterRefreshDimensions": "afterRefreshDimensions"; "afterRemoveCellMeta": "afterRemoveCellMeta"; "afterRemoveCol": "afterRemoveCol"; "afterRemoveRow": "afterRemoveRow"; "afterRender": "afterRender"; "afterRenderer": "afterRenderer"; "afterRowMove": "afterRowMove"; "afterRowResize": "afterRowResize"; "afterScrollHorizontally": "afterScrollHorizontally"; "afterScrollVertically": "afterScrollVertically"; "afterSelection": "afterSelection"; "afterSelectionByProp": "afterSelectionByProp"; "afterSelectionEnd": "afterSelectionEnd"; "afterSelectionEndByProp": "afterSelectionEndByProp"; "afterSetCellMeta": "afterSetCellMeta"; "afterSetDataAtCell": "afterSetDataAtCell"; "afterSetDataAtRowProp": "afterSetDataAtRowProp"; "afterSetSourceDataAtCell": "afterSetSourceDataAtCell"; "afterTrimRow": "afterTrimRow"; "afterUndo": "afterUndo"; "afterUnhideColumns": "afterUnhideColumns"; "afterUnhideRows": "afterUnhideRows"; "afterUnlisten": "afterUnlisten"; "afterUnmergeCells": "afterUnmergeCells"; "afterUntrimRow": "afterUntrimRow"; "afterUpdateSettings": "afterUpdateSettings"; "afterValidate": "afterValidate"; "afterViewportColumnCalculatorOverride": "afterViewportColumnCalculatorOverride"; "afterViewportRowCalculatorOverride": "afterViewportRowCalculatorOverride"; "beforeAddChild": "beforeAddChild"; "beforeAutofill": "beforeAutofill"; "beforeAutofillInsidePopulate": "beforeAutofillInsidePopulate"; "beforeCellAlignment": "beforeCellAlignment"; "beforeChange": "beforeChange"; "beforeChangeRender": "beforeChangeRender"; "beforeColumnCollapse": "beforeColumnCollapse"; "beforeColumnExpand": "beforeColumnExpand"; "beforeColumnMove": "beforeColumnMove"; "beforeColumnResize": "beforeColumnResize"; "beforeColumnSort": "beforeColumnSort"; "beforeContextMenuSetItems": "beforeContextMenuSetItems"; "beforeContextMenuShow": "beforeContextMenuShow"; "beforeCopy": "beforeCopy"; "beforeCreateCol": "beforeCreateCol"; "beforeCreateRow": "beforeCreateRow"; "beforeCut": "beforeCut"; "beforeDetachChild": "beforeDetachChild"; "beforeDrawBorders": "beforeDrawBorders"; "beforeDropdownMenuSetItems": "beforeDropdownMenuSetItems"; "beforeDropdownMenuShow": "beforeDropdownMenuShow"; "beforeFilter": "beforeFilter"; "beforeGetCellMeta": "beforeGetCellMeta"; "beforeHideColumns": "beforeHideColumns"; "beforeHideRows": "beforeHideRows"; "beforeInit": "beforeInit"; "beforeInitWalkontable": "beforeInitWalkontable"; "beforeKeyDown": "beforeKeyDown"; "beforeLanguageChange": "beforeLanguageChange"; "beforeLoadData": "beforeLoadData"; "beforeMergeCells": "beforeMergeCells"; "beforeOnCellContextMenu": "beforeOnCellContextMenu"; "beforeOnCellMouseDown": "beforeOnCellMouseDown"; "beforeOnCellMouseOut": "beforeOnCellMouseOut"; "beforeOnCellMouseOver": "beforeOnCellMouseOver"; "beforeOnCellMouseUp": "beforeOnCellMouseUp"; "beforePaste": "beforePaste"; "beforeRedo": "beforeRedo"; "beforeRefreshDimensions": "beforeRefreshDimensions"; "beforeRemoveCellClassNames": "beforeRemoveCellClassNames"; "beforeRemoveCellMeta": "beforeRemoveCellMeta"; "beforeRemoveCol": "beforeRemoveCol"; "beforeRemoveRow": "beforeRemoveRow"; "beforeRender": "beforeRender"; "beforeRenderer": "beforeRenderer"; "beforeRowMove": "beforeRowMove"; "beforeRowResize": "beforeRowResize"; "beforeSetCellMeta": "beforeSetCellMeta"; "beforeSetRangeEnd": "beforeSetRangeEnd"; "beforeSetRangeStart": "beforeSetRangeStart"; "beforeSetRangeStartOnly": "beforeSetRangeStartOnly"; "beforeStretchingColumnWidth": "beforeStretchingColumnWidth"; "beforeTouchScroll": "beforeTouchScroll"; "beforeTrimRow": "beforeTrimRow"; "beforeUndo": "beforeUndo"; "beforeUnhideColumns": "beforeUnhideColumns"; "beforeUnhideRows": "beforeUnhideRows"; "beforeUnmergeCells": "beforeUnmergeCells"; "beforeUntrimRow": "beforeUntrimRow"; "beforeValidate": "beforeValidate"; "beforeValueRender": "beforeValueRender"; "construct": "construct"; "init": "init"; "modifyAutofillRange": "modifyAutofillRange"; "modifyColHeader": "modifyColHeader"; "modifyColumnHeaderHeight": "modifyColumnHeaderHeight"; "modifyColWidth": "modifyColWidth"; "modifyCopyableRange": "modifyCopyableRange"; "modifyData": "modifyData"; "modifyGetCellCoords": "modifyGetCellCoords"; "modifyRowData": "modifyRowData"; "modifyRowHeader": "modifyRowHeader"; "modifyRowHeaderWidth": "modifyRowHeaderWidth"; "modifyRowHeight": "modifyRowHeight"; "modifySourceData": "modifySourceData"; "modifyTransformEnd": "modifyTransformEnd"; "modifyTransformStart": "modifyTransformStart"; "persistentStateLoad": "persistentStateLoad"; "persistentStateReset": "persistentStateReset"; "persistentStateSave": "persistentStateSave"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,